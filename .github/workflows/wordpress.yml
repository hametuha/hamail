name: Test Plugin

on:
  pull_request:
    branches:
      - master

jobs:
#  test:
#    runs-on: ${{ matrix.operating-system }}
#    strategy:
#      matrix:
#        operating-system: [ ubuntu-latest ]  # OS. ubuntu-18.04 is also available.
#        php: [ '7.2', '7.4', '8.1' ] # PHP versions to check.
#        wp: [ 'latest', '5.9' ]      # WordPress version to check.
#        version: [ 'light', 'pro' ]  # Pro or light.
#    services:
#      mysql:
#        image: mysql:5.7
#        options: --health-cmd "mysqladmin ping --host 127.0.0.1 --port 3306" --health-interval 20s --health-timeout 10s --health-retries 10
#        ports:
#          - 3306/tcp
#        env:
#          MYSQL_ROOT_PASSWORD: root
#    name: WordPress ${{ matrix.wp }} in PHP ${{ matrix.php }} UnitTest
#    steps:
#      - uses: actions/checkout@master
#
#      - name: Setup PHP with composer
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: ${{ matrix.php }}
#          tools: composer
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Validate composer.json and composer.lock
#        run: composer validate
#
#      - name: Install dependencies
#        run: composer install --prefer-dist --no-progress --no-suggest
#
#      - name: Start MySQL
#        run: sudo systemctl start mysql
#
#      - name: Install WordPress
#        run: bash bin/install-wp-tests.sh wordpress root root 127.0.0.1:3306 ${{ matrix.wp }}
#
#      - name: Remove Pro directory for light version.
#        if: matrix.version != 'pro'
#        run: rm -rf app/Hametuha/Hamail/Pro
#
#      - name: Run test suite
#        run: composer test

  lint:
    name: PHP Syntax Check
    uses: tarosky/workflows/.github/workflows/phpcs.yml@main
    with:
      version: 8.0

  php-lint:
    name: PHP Syntax Check for Plugin Directory
    uses: tarosky/workflows/.github/workflows/phplint.yml@main

  assets:
    name: Check JS and CSS syntax
    uses: tarosky/workflows/.github/workflows/npm.yml@main
    with:
      node_version: 20
      command: lint
      package: package

  status-check:
    name: Status Check
    if: always()
    runs-on: ubuntu-latest
    needs: [ lint, php-lint, assets ] # [ test, lint, php-lint, assets ] # Remove test temporary.
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
